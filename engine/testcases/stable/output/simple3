
INPUT TEXT:
Every customer is important.
John is a customer.
If someone X is not a customer then X is an employee.
Mary is an employee.
Ted is a man.
Moe has a car.
Billy is a customer.
If someone X is important then X has a car.

RULES:
group([property(A, important, pos)]) <- [group([object(A, customer, countable, na, eq, 1)])].
group([pred_mod(have, A, gv(0), []), object(gv(0), car, countable, na, eq, 1)]) <- [group([property(A, important, pos)]), object(A, B, C, D, E, F)].
group([pred_mod(have, v('Moe'), gv(0), []), object(gv(0), car, countable, na, eq, 1)]).
group([object(A, employee, countable, na, eq, 1)]) <- [object(A, B, C, D, E, F), -group([object(A, customer, countable, na, eq, 1)])].
group([object(v('Billy'), customer, countable, na, eq, 1)]).
group([object(v('John'), customer, countable, na, eq, 1)]).
group([object(v('Mary'), employee, countable, na, eq, 1)]).
object(v('Billy'), 'Billy', named, na, eq, 1).
object(v('John'), 'John', named, na, eq, 1).
object(v('Mary'), 'Mary', named, na, eq, 1).
object(v('Moe'), 'Moe', named, na, eq, 1).
object(v('Ted'), 'Ted', named, na, eq, 1).
object(v('Ted'), man, countable, na, eq, 1).

SIMPLE RULES:
important(A) <- [customer(A)].
group([have(A, gv(0), []), car(gv(0))]) <- [important(A), something(A)].
group([have('Moe', gv(0), []), car(gv(0))]).
employee(A) <- [something(A), -customer(A)].
customer('Billy').
customer('John').
employee('Mary').
man('Ted').

ANSWERSET #1:
object(v('Billy'), 'Billy', named, na, eq, 1).
object(v('John'), 'John', named, na, eq, 1).
object(v('Mary'), 'Mary', named, na, eq, 1).
object(v('Moe'), 'Moe', named, na, eq, 1).
object(v('Ted'), 'Ted', named, na, eq, 1).
object(v('Ted'), man, countable, na, eq, 1).
group([property(v('Billy'), important, pos)]).
group([object(v('Billy'), customer, countable, na, eq, 1)]).
group([property(v('John'), important, pos)]).
group([object(v('John'), customer, countable, na, eq, 1)]).
group([pred_mod(have, v('Billy'), gv(0), []), object(gv(0), car, countable, na, eq, 1)]).
group([pred_mod(have, v('John'), gv(0), []), object(gv(0), car, countable, na, eq, 1)]).
group([pred_mod(have, v('Moe'), gv(0), []), object(gv(0), car, countable, na, eq, 1)]).
group([object(v('Mary'), employee, countable, na, eq, 1)]).
group([object(v('Moe'), employee, countable, na, eq, 1)]).
group([object(v('Ted'), employee, countable, na, eq, 1)]).

ANSWERTEXT #1:
John is important.
Billy is important.
Ted is an employee.
John is a customer.
Moe is an employee.
Billy is a customer.
John has a car.
Mary is an employee.
Ted is a man.
Billy has a car.
Moe has a car.

